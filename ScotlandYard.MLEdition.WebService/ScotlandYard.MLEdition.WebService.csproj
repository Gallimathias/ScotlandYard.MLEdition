<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DebugRoot>..\ScotlandYard.MLEdition.WebUi\</DebugRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.4" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.2" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.1.2" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="6.5.1" />
    <PackageReference Include="System.Reactive" Version="4.4.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\" />
  </ItemGroup>

 
  <!--<Target Name="DebugRestoreSPA" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(DebugRoot)node_modules') ">
    --><!-- Ensure Node.js is installed --><!--
    <Exec Command="node version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'yarn'. This may take several minutes..." />
    <Exec WorkingDirectory="$(DebugRoot)" Command="yarn" />
  </Target>
  <Target Name="DebugBuildSPA" AfterTargets="DebugRestoreSPA" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug'">
    --><!-- Ensure Node.js is installed --><!--
    <Exec Command="node version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Build spa using ng......" />
    <Exec WorkingDirectory="$(DebugRoot)" Command="ng build prod=false" />
  </Target>-->

  <ItemGroup>
        <SPAFiles Include="$(DebugRoot)dist\**\*.*" />
    </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\ScotlandYard.MLEdition.Runtime\ScotlandYard.MLEdition.Runtime.csproj" />
  </ItemGroup>
    
  <!--<Target Name="CopyFiles" AfterTargets="DebugBuildSPA" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug'">
    <Message Importance="high" Text="Copy build files to SPA Root......" />
    <Copy
        SourceFiles="@(SPAFiles)"
        DestinationFiles="@(SPAFiles->'$(SpaRoot)%(RecursiveDir)%(Filename)%(Extension)')"
        />
  </Target>-->

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="ng build --prod=true" />
    <!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />-->

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
